<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <stringProp name="TestPlan.comments">${__P(kafka.brokers,172.27.196.68:9092\,172.27.196.68:9092\,172.27.196.68:9092)}</stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="pKafkaBrokers" elementType="Argument">
            <stringProp name="Argument.name">pKafkaBrokers</stringProp>
            <stringProp name="Argument.value">${__P(kafka.brokers,crk484jv3oritbs0ruag.any.eu-central-1.mpx.prd.cloud.redpanda.com:9092)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsername" elementType="Argument">
            <stringProp name="Argument.name">pUsername</stringProp>
            <stringProp name="Argument.value">${__P(username,kafkameter)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pPassword" elementType="Argument">
            <stringProp name="Argument.name">pPassword</stringProp>
            <stringProp name="Argument.value">${__P(password,PpwHU3BX1vtesSthnPrFDpLVeGfLsy)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\Installers\apache-jmeter\apache-jmeter-5.6.3\lib\kafka-serializer-1.0-SNAPSHOT.jar</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <com.di.jmeter.kafka.config.KafkaProducerConfig guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.config.KafkaProducerConfig" testname="Kafka Producer Config">
        <stringProp name="producerClientVariableName">KafkaProducerClient</stringProp>
        <stringProp name="kafkaBrokers">${pKafkaBrokers}</stringProp>
        <stringProp name="batchSize">16384</stringProp>
        <stringProp name="clientId">jmeter-1</stringProp>
        <stringProp name="serializerKey">org.apache.kafka.common.serialization.ByteArraySerializer</stringProp>
        <stringProp name="serializerValue">org.apache.kafka.common.serialization.ByteArraySerializer</stringProp>
        <stringProp name="securityType">securityType.plaintext</stringProp>
        <stringProp name="kafkaSslTruststore"></stringProp>
        <stringProp name="kafkaSslTruststorePassword">Chang3M3</stringProp>
        <stringProp name="kafkaSslKeystore"></stringProp>
        <stringProp name="kafkaSslKeystorePassword">Chang3M3</stringProp>
        <stringProp name="kafkaSslPrivateKeyPass">Chang3M3</stringProp>
        <collectionProp name="extraConfigs">
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">security.protocol</stringProp>
            <stringProp name="configValue">SASL_SSL</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.mechanism</stringProp>
            <stringProp name="configValue">SCRAM-SHA-256</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.jaas.config</stringProp>
            <stringProp name="configValue">org.apache.kafka.common.security.scram.ScramLoginModule required username=&quot;${pUsername}&quot; password=&quot;${pPassword}&quot;;</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">org.apache.kafka.common.serialization.StringSerializer | org.apache.kafka.common.serialization.ByteArraySerializer | io.perfwise.kafka.converters.CustomSerializer</stringProp>
        <stringProp name="kafkaProducerClientVariableName">KafkaProducerClient</stringProp>
      </com.di.jmeter.kafka.config.KafkaProducerConfig>
      <hashTree/>
      <com.di.jmeter.kafka.config.KafkaConsumerConfig guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.config.KafkaConsumerConfig" testname="Kafka Consumer Client">
        <stringProp name="deSerializerKey">org.apache.kafka.common.serialization.ByteArrayDeserializer</stringProp>
        <stringProp name="deSerializerValue">org.apache.kafka.common.serialization.ByteArrayDeserializer</stringProp>
        <collectionProp name="extraConfigs">
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">security.protocol</stringProp>
            <stringProp name="configValue">SASL_SSL</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.mechanism</stringProp>
            <stringProp name="configValue">SCRAM-SHA-256</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.jaas.config</stringProp>
            <stringProp name="configValue">org.apache.kafka.common.security.scram.ScramLoginModule required username=&quot;${pUsername}&quot; password=&quot;${pPassword}&quot;;</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">auto.offset.reset</stringProp>
            <stringProp name="configValue">earliest</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="groupId">my-consumer-client-001</stringProp>
        <stringProp name="kafkaBrokers">${pKafkaBrokers}</stringProp>
        <stringProp name="kafkaConsumerClientVariableName">KafkaConsumerClient</stringProp>
        <stringProp name="kafkaSslKeystore"></stringProp>
        <stringProp name="kafkaSslKeystorePassword">Chang3M3</stringProp>
        <stringProp name="kafkaSslPrivateKeyPass">Chang3M3</stringProp>
        <stringProp name="kafkaSslTruststore"></stringProp>
        <stringProp name="kafkaSslTruststorePassword">Chang3M3</stringProp>
        <stringProp name="securityType">securityType.plaintext</stringProp>
        <stringProp name="topic">kafkameter</stringProp>
        <stringProp name="numberOfMsgToPoll">10</stringProp>
        <boolProp name="autoCommit">true</boolProp>
        <stringProp name="deserializerKey">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="deserializerValue">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="consumerClientVariableName">KafkaConsumerClient</stringProp>
        <stringProp name="TestPlan.comments">org.apache.kafka.common.serialization.StringDeserializer | org.apache.kafka.common.serialization.ByteArrayDeserializer</stringProp>
      </com.di.jmeter.kafka.config.KafkaConsumerConfig>
      <hashTree/>
      <com.di.jmeter.kafka.config.KafkaProducerConfig guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.config.KafkaProducerConfig" testname="Kafka Producer Config" enabled="false">
        <stringProp name="producerClientVariableName">KafkaProducerClient</stringProp>
        <stringProp name="kafkaBrokers">${pKafkaBrokers}</stringProp>
        <stringProp name="batchSize">16384</stringProp>
        <stringProp name="clientId">jmeter-1</stringProp>
        <stringProp name="serializerKey">io.perfwise.kafka.converters.CustomSerializer</stringProp>
        <stringProp name="serializerValue">io.perfwise.kafka.converters.CustomSerializer</stringProp>
        <stringProp name="securityType">securityType.plaintext</stringProp>
        <stringProp name="kafkaSslTruststore"></stringProp>
        <stringProp name="kafkaSslTruststorePassword">Chang3M3</stringProp>
        <stringProp name="kafkaSslKeystore"></stringProp>
        <stringProp name="kafkaSslKeystorePassword">Chang3M3</stringProp>
        <stringProp name="kafkaSslPrivateKeyPass">Chang3M3</stringProp>
        <collectionProp name="extraConfigs">
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">security.protocol</stringProp>
            <stringProp name="configValue">SASL_SSL</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.mechanism</stringProp>
            <stringProp name="configValue">SCRAM-SHA-256</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.jaas.config</stringProp>
            <stringProp name="configValue">org.apache.kafka.common.security.scram.ScramLoginModule required username=&quot;${pUsername}&quot; password=&quot;${pPassword}&quot;;</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">org.apache.kafka.common.serialization.StringSerializer | org.apache.kafka.common.serialization.ByteArraySerializer | io.perfwise.kafka.converters.CustomSerializer | CustomSerializer.class.getName()| CustomSerializer.class.getName()</stringProp>
        <stringProp name="kafkaProducerClientVariableName">KafkaProducerClient</stringProp>
      </com.di.jmeter.kafka.config.KafkaProducerConfig>
      <hashTree/>
      <com.di.jmeter.kafka.config.KafkaConsumerConfig guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.config.KafkaConsumerConfig" testname="Kafka Consumer Client" enabled="false">
        <stringProp name="deSerializerKey">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="deSerializerValue">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <collectionProp name="extraConfigs">
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">security.protocol</stringProp>
            <stringProp name="configValue">SASL_SSL</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.mechanism</stringProp>
            <stringProp name="configValue">SCRAM-SHA-256</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">sasl.jaas.config</stringProp>
            <stringProp name="configValue">org.apache.kafka.common.security.scram.ScramLoginModule required username=&quot;${pUsername}&quot; password=&quot;${pPassword}&quot;;</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
            <stringProp name="configKey">auto.offset.reset</stringProp>
            <stringProp name="configValue">earliest</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="groupId">my-consumer-client-001</stringProp>
        <stringProp name="kafkaBrokers">${pKafkaBrokers}</stringProp>
        <stringProp name="kafkaConsumerClientVariableName">KafkaConsumerClient</stringProp>
        <stringProp name="kafkaSslKeystore"></stringProp>
        <stringProp name="kafkaSslKeystorePassword">Chang3M3</stringProp>
        <stringProp name="kafkaSslPrivateKeyPass">Chang3M3</stringProp>
        <stringProp name="kafkaSslTruststore"></stringProp>
        <stringProp name="kafkaSslTruststorePassword">Chang3M3</stringProp>
        <stringProp name="securityType">securityType.plaintext</stringProp>
        <stringProp name="topic">kafkameter</stringProp>
        <stringProp name="numberOfMsgToPoll">10</stringProp>
        <boolProp name="autoCommit">true</boolProp>
        <stringProp name="deserializerKey">org.apache.kafka.common.serialization.ByteArrayDeserializer</stringProp>
        <stringProp name="deserializerValue">org.apache.kafka.common.serialization.ByteArrayDeserializer</stringProp>
        <stringProp name="consumerClientVariableName">KafkaConsumerClient</stringProp>
      </com.di.jmeter.kafka.config.KafkaConsumerConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Producer" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <com.di.jmeter.kafka.sampler.KafkaProducerSampler guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.sampler.KafkaProducerSampler" testname="Kafka Producer Sampler" enabled="false">
          <stringProp name="kafkaMessage">{
	&quot;_classname&quot;: &quot;Protocol&quot;
	&quot;endpoint&quot;: {
		&quot;unitCategory&quot;: &quot;MASTER&quot;
	},
	&quot;properties&quot;: {
		&quot;crypt&quot;: false
	},
	&quot;commonInfo&quot;:{
		&quot;accountId&quot;: &quot;123455&quot;,
		&quot;receiveTime&quot;: &quot;${__time(YYYY-dd-MM_HH:mm:ss,)}&quot;,
		&quot;uniState&quot;: {
			&quot;foo&quot;: &quot;bar&quot;
		}
	}
}</stringProp>
          <stringProp name="kafkaMessageKey">jmeter-key1</stringProp>
          <stringProp name="kafkaProducerClientVariableName">KafkaProducerClient</stringProp>
          <stringProp name="kafkaTopic">kafkameter</stringProp>
          <collectionProp name="messageHeaders">
            <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
              <stringProp name="headerKey">key1</stringProp>
              <stringProp name="headerValue">val1</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="partitionString"></stringProp>
          <stringProp name="producerClientVariableName">KafkaProducerClient</stringProp>
        </com.di.jmeter.kafka.sampler.KafkaProducerSampler>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="false">
            <intProp name="calcMode">2</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>600.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <com.di.jmeter.kafka.sampler.KafkaProducerSampler guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.sampler.KafkaProducerSampler" testname="CustomSerilizer Sampler">
          <stringProp name="kafkaMessage">${data}</stringProp>
          <stringProp name="kafkaMessageKey">jmeter-key1</stringProp>
          <stringProp name="kafkaProducerClientVariableName">KafkaProducerClient</stringProp>
          <stringProp name="kafkaTopic">kafkameter</stringProp>
          <collectionProp name="messageHeaders">
            <elementProp name="" elementType="com.di.jmeter.kafka.utils.VariableSettings">
              <stringProp name="headerKey">key1</stringProp>
              <stringProp name="headerValue">val1</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="partitionString"></stringProp>
          <stringProp name="producerClientVariableName">KafkaProducerClient</stringProp>
        </com.di.jmeter.kafka.sampler.KafkaProducerSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="CustomSerializer">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import io.perfwise.kafka.converters.CustomSerializer;
import io.perfwise.kafka.converters.MessageDto;

MessageDto mDto = new MessageDto();
mDto.message = &quot;New message&quot;;
mDto.version = &quot;1&quot;;

CustomSerializer serializer = new CustomSerializer();
byte[] serializedData = serializer.serialize(&quot;key1&quot;, mDto);

vars.put(&quot;data&quot;, serializedData.toString())

//println(&quot;Serialized data: &quot; + Arrays.toString(serializedData));
//log.info(Arrays.toString(serializedData))</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Consumer">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">10</longProp>
        <longProp name="ThreadGroup.delay">10</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <com.di.jmeter.kafka.sampler.KafkaConsumerSampler guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.sampler.KafkaConsumerSampler" testname="Kafka Consumer Sampler">
          <boolProp name="autoCommit">true</boolProp>
          <stringProp name="commitType">Sync</stringProp>
          <stringProp name="kafkaConsumerClientVariableName">KafkaConsumerClient</stringProp>
          <stringProp name="pollTimeout">600000</stringProp>
          <stringProp name="TestPlan.comments">${__threadNum}</stringProp>
          <stringProp name="consumerClientVariableName">KafkaConsumerClient</stringProp>
        </com.di.jmeter.kafka.sampler.KafkaConsumerSampler>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">${__threadNum}</stringProp>
            <stringProp name="script">import io.perfwise.kafka.converters.CustomDeserializer;
import io.perfwise.kafka.converters.MessageDto;

MessageDto mDto = new MessageDto();
mDto.message = &quot;New message&quot;;
mDto.version = &quot;1&quot;;

CustomDeserializer deserializer = new CustomDeserializer();
def outputMessage = deserializer.deserialize(&quot;key1&quot;, prev.responseData());

prev.setResponseData(outputMessage)</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
